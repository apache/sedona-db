# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
name: python-wheels

on:
  pull_request:
    branches:
      - main
    paths:
      - 'ci/scripts/**'
      - '.github/workflows/python-wheels.yml'
  push:
    branches:
      - main
      - 'maint-**'
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.repository }}-${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  windows-x86_64:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'

      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install cibuildwheel and delvewheel
        run: python -m pip install cibuildwheel==3.1.4 delvewheel

      - uses: Swatinem/rust-cache@v2
        with:
          # Update this key to force a new cache
          prefix-key: "python-wheel-windows-latest-v1"

      - name: Clone vcpkg
        uses: actions/checkout@v4
        with:
          repository: microsoft/vcpkg
          ref: "2025.06.13"
          path: vcpkg

      - name: Bootstrap vcpkg
        shell: bash
        env:
          VCPKG_ROOT: ${{ github.workspace }}/vcpkg
          VCPKG_DEFAULT_TRIPLET: x64-windows-dynamic-release
        run: |
          cd ci/scripts
          ./wheels-bootstrap-vcpkg.sh

      - name: Build and test wheels (sedonadb)
        run: |
          cd ci/scripts
          .\wheels-build-windows.ps1
        env:
          VCPKG_ROOT: ${{ github.workspace }}/vcpkg
          VCPKG_DEFAULT_TRIPLET: x64-windows-dynamic-release
          CIBW_BUILD: "*-win_amd64"
          CIBW_TEST_SKIP: "cp314* cp38*"
          CIBW_TEST_REQUIRES: pytest adbc_driver_manager geoarrow-pyarrow geopandas
          CIBW_TEST_COMMAND: pytest {package}/tests -vv

      - uses: actions/upload-artifact@v4
        with:
          name: release-wheels-windows-x86_64
          path: python/sedonadb/dist/*.whl

  macOS-arm64:
    runs-on: macOS-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'

      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==3.1.4

      - uses: Swatinem/rust-cache@v2
        with:
          # Update this key to force a new cache
          prefix-key: "python-wheel-macOS-latest-v1"

      - name: Clone vcpkg
        uses: actions/checkout@v4
        with:
          repository: microsoft/vcpkg
          ref: "2025.06.13"
          path: vcpkg

      - name: Build and test wheels (sedonadb)
        run: |
          cd ci/scripts
          ./wheels-build-macos.sh sedonadb
        env:
          VCPKG_ROOT: ${{ github.workspace }}/vcpkg
          CIBW_TEST_SKIP: "cp314*"
          CIBW_TEST_REQUIRES: pytest adbc_driver_manager geoarrow-pyarrow geopandas duckdb
          CIBW_TEST_COMMAND: pytest {package}/tests -vv

      - uses: actions/upload-artifact@v4
        with:
          name: release-wheels-macOS-arm64
          path: python/sedonadb/dist/*.whl

  wheels-linux:
    name: ${{ matrix.config.label }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - {os: "ubuntu-latest", label: "linux-x86_64", arch: "x86_64"}
          # We can't include this in our CI config until the repository is public
          # - {os: "ubuntu-24.04-arm", label: "linux-arm64", arch: "aarch64"}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'

      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==3.1.4

      - name: Build and test wheels (sedonadb)
        run: |
          cd ci/scripts
          ./wheels-build-linux.sh ${{ matrix.config.arch }} sedonadb
        env:
          CIBW_SKIP: "*musllinux*"
          CIBW_TEST_SKIP: "cp314*"
          CIBW_TEST_REQUIRES: pytest adbc_driver_manager geoarrow-pyarrow geopandas duckdb
          CIBW_TEST_COMMAND: pytest {package}/tests -vv

      - uses: actions/upload-artifact@v4
        with:
          name: release-wheels-${{ matrix.config.label }}
          path: python/sedonadb/dist/*.whl
